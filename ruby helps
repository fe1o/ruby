def hello
	puts "hello world!"
end

hello

metódo depois de definido só precisa usar o nome do método e estruta tudo dentro dele é executado

x = x.to_i (converter para inteiro)
x = x.to_f (converter pra float)
x = x.to_s (converter para string)
rand(x) (gerar x numéros não incluindo x)
x.times{x vezes será executado o/os comando/comandos aqui dentro}
gets.chomp (a entrada mesmo sendo um número, é considerada apenas como um string)
! (essa exclamação específica, é a dos métodos. Que ela modifica a variável e à salva modificada)
x.capitalize! (primeira letra maiúscula e o resto minúsculo)
x.downcase! (todas as letras minúsculas)
x.upcase! (todas as letras maiúsculas)
x.reverse! (reverte o string)
x.include?("") (se a variável ou um array ou string ou um HASH contém ou não, um número, string e etc)
x.empty? (se algo foi escrito ou não)
x.even? (número par)
x.odd? (número ímpar)
x.to_a (converte pra um array)
x['algo no string'] = pelo que esse algo vai ser substituido (método rápido de subistituição no string)
x.gsub!(/o que vai ser substituido/, substituto) (método de substituição)
x.split("delimitador") (separa as palavras de um string em um array)
|| (ou)
&& (e)
! (não)
!= (diferente)
>= (maior igual)
<= (menor igual)
% (resto da divisão)
#array
x = [1, 2, "auhahuds", [3, 4, 5]] (array é um conjunto de elementos, como um vetor unidimensional, pode conter qualquer tipo de elemento dentro, inteiros, decimais(float), strings e até outros arrays. O índice começa no 0 então pra chamar o número 1 ali seria x[0] o 2 x[1] e assim por diante)
x.shuffle! (mistura a ordem dos elementos do array)
(x..y) (gera números de x até y)
x << 5 (adiciona um elemento ao final do array)
x.push() (também outro método para adicionar um elemento a um array)
x.unshift() (adiciona um elemento ao início do array)
x.pop (printa o ultimo elemento do array e retira o mesmo do array)
x.uniq (retira todos os elementos repetidos de um array, caso existam)
x.each {|i|} (forma preferida num geral em ruby para se observar um array, ele observa o array por inteiro e o que está no bloco de código é executado para cada item, melhor método)
x.each do |y|#váriavel que vai conter a infomação de cada elemento do vetor, não o melhor método
	puts ("Random")
end
x.select {|i|} (recebe uma expreção booleana e printa todos os elementos que tiverem valor verdadeiro a expreção)
x.select {|i| i.odd?} (exemplo de printando todos os números ímpares do array)
x.join() (printa os elementos juntos do array e também junta eles)
+=, -=, *=, /= (incremento e decremento de variaveis, adicionando numeros, subtraindo eles, multiplicando e até dividindo)
next if/while(eu acho/for(eu acho)(next ele pula passos caso seu valor seja verdadeiro)
x.max (apresenta o maior número do array)
x.sort (arruma em ordem crescente)
poem.lines.to_a (faz o poema virar uma lista com cada uma de suas linhas virando um array)
poem.lines.to_a.reverse (ao invés de suas letras e também linhas serem alteradas de ordem, como cada linha agora é um array apenas o que é reversso é a ordem das linhas)
#Hash, é um tipo e arranjo e dados como um array sendo que os valores em um hash tem suas chaves para seus respectivos valores.
x = {'chave' =>(associaor do valou ou hash rocket) 'valor'(podendo ser um string ou inteiros ou float(decimais), 'chave2' => 'valor2`} e por ai vai
x = {y: 5, z: 3} e a forma mais tradicional de se utilizar um hash
a chave de um hash pode ser tambem so um x ou y sendo assim um simbolo e nao um string como tinha sido botado entre ''
para chamar um elemento de um hash se utiiza
x['ads'] caso a chave seja um string
x[:c] caso a chave seja um simbolo
adicionando um novo valor ao hash
x['novo'] = 5 como um string
x[:novo] = 4 como um simbolo
x.delete('chave do hash que sera deletada`)(deletando um elemento do hash, sim usando parenteses normais)
x.each {|valor da chave, valor do valor| print #{valor do valor( printa só o valor da chave)}
			 {|valor da chave, valor do valor| print #{valor da chave( printa só o nome da chave)}
x.keys (printa as chaves do hash)
x.values(printa os valores das chaves)
Dir.entries "diretorio" (printa todos os arquivos e pastas do diretorio)
Dir["tipo de arquivo ou arquivo especifico a ser procurado, como "/*.txt" para procurar todos os arquivos .txt]
print File.read("/comics.txt") (le o arquivo especifico)
FileUtils.cp('arquivo no diretorio de origem', 'arquivo no dirotorio de destino') (copiar e colar arquivos)
File.open('/Home/comics.txt', 'a') do |f|
f << "batatat"														( abre o arquivo para voce adicionar algo ao final do arquivo)
end (para terminar a edição)
File.mtime("arquivo no diretorio, "/Home/comics.txt"") (tempo em que o arquivo foi editado pela ultima vez)

